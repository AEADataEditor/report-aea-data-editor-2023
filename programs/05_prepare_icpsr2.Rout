
R version 4.2.3 (2023-03-15) -- "Shortstop Beagle"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Tabulate statistics and make graphs for the AEA data editor report
> # Harry Son
> # 2/18/2021
> 
> # Inputs
> #   - file.path(jiraanon,"jira.anon.RDS") 
> #   - file.path(temp,"jira.others.RDS)
> # Outputs
> 
> 
> ### Load libraries 
> ### Requirements: have library *here*
> source(here::here("global-libraries.R"),echo=TRUE)

> ppm.date <- "2023-11-01"

> options(repos = c(CRAN = paste0("https://packagemanager.posit.co/cran/__linux__/focal/", 
+     ppm.date)))

> global.libraries <- c("dplyr", "here", "tidyr", "tibble", 
+     "stringr", "readr", "splitstackshape", "digest", "remotes", 
+     "readxl", "write ..." ... [TRUNCATED] 

> pkgTest <- function(x) {
+     if (!require(x, character.only = TRUE)) {
+         install.packages(x, dep = TRUE)
+         if (!require(x, charact .... [TRUNCATED] 

> pkgTest.github <- function(libname, source, pkgname = libname) {
+     if (!require(libname, character.only = TRUE)) {
+         if (pkgname == "")  .... [TRUNCATED] 

> results <- sapply(as.list(global.libraries), pkgTest)
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: here
here() starts at /home/rstudio
Loading required package: tidyr
Loading required package: tibble
Loading required package: stringr
Loading required package: readr
Loading required package: splitstackshape
Loading required package: digest
Loading required package: remotes
Loading required package: readxl
Loading required package: writexl
Loading required package: ggplot2
Loading required package: ggthemes
Loading required package: janitor

Attaching package: ‘janitor’

The following objects are masked from ‘package:stats’:

    chisq.test, fisher.test

Loading required package: dataverse
Loading required package: xtable

> pkgTest.github("stargazer", "markwestcott34", "stargazer-booktabs")
Loading required package: stargazer

Please cite as: 

 Hlavac, Marek (2015). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2. http://CRAN.R-project.org/package=stargazer 

[1] "OK"
> source(here::here("programs","config.R"),echo=TRUE)

> process_anon <- TRUE

> download_anon <- TRUE

> report.year <- 2023

> firstday <- paste0(as.character(report.year - 1), 
+     "-12-01")

> lastday <- paste0(as.character(report.year), "-11-30")

> basepath <- here::here()

> setwd(basepath)

> jira.anon.partial <- file.path("data", "jira", "anon")

> jiraanon <- file.path(basepath, jira.anon.partial)

> manual <- file.path(basepath, "data", "manual")

> jira.raw <- file.path("data", "jira", "raw")

> icpsrbase <- file.path(basepath, "data", "icpsr")

> icpsr.utilization.date <- "2023-12-06"

> icpsr.utilization.file <- paste0("utilizationReport-", 
+     icpsr.utilization.date, ".csv")

> icpsr.custom.xlsx <- "AEA-2023-Jan-1-through-Nov-28-2023.xlsx"

> zenodobase <- file.path(basepath, "data", "zenodo")

> jira.anon.name <- file.path(jiraanon, "jira.anon.RDS")

> jira.anon.commit <- "c02c1a68b2bdc24704d1e51b5273df209ad31378"

> jira.anon.sha256 <- "6f76b58e101f88469698cfec98a834f160f25db6549d433f45520be21360d3d5"

> jira.anon.urlbase <- paste0("https://raw.githubusercontent.com/AEADataEditor/processing-jira-process-data/", 
+     jira.anon.commit)

> jira.anon.url <- file.path(jira.anon.urlbase, "data", 
+     "anon", "jira.anon.RDS")

> jira.members.url <- file.path(jira.anon.urlbase, "data", 
+     "replicationlab_members.txt")

> jira.members.name <- file.path(jiraanon, "replicationlab_members.txt")

> jira.noncompliance.name <- file.path(jira.raw, "jira-search-non-compliant.xlsx")

> jira.updates.name <- file.path(jira.raw, "jira-search-updates.xlsx")

> jira.nda.name <- file.path(jira.raw, "jira-search-nda.xlsx")

> jira.external.name <- file.path(jira.raw, "jira-search-external.xlsx")

> scholarone <- file.path(basepath, "data", "scholarone")

> scholarone.file <- "dataEditorReport_20221111-20231110.xlsx"

> scholarone.name <- file.path(scholarone, scholarone.file)

> scholarone.prev <- "dataEditorReport_20201128-20211127Revised.xlsx"

> scholarone.skip <- 33

> scholarone.skip2 <- 45

> scholarone.pskip <- 31

> images <- file.path(basepath, "images")

> tables <- file.path(basepath, "tables")

> programs <- file.path(basepath, "programs")

> temp <- file.path(basepath, "data", "temp")

> latexnums.Rda <- file.path(tables, "latexnums.Rda")

> latexnums.tex <- file.path(tables, "latexnums.tex")

> for (dir in list(images, tables, programs, temp)) {
+     if (file.exists(dir)) {
+     }
+     else {
+         dir.create(file.path(dir))
+     }
 .... [TRUNCATED] 

> set.seed(20201201)

> pkgTest("tibble")
[1] "OK"

> if (file.exists(latexnums.Rda)) {
+     print(paste0("File for export to LaTeX found: ", latexnums.Rda))
+ } else {
+     latexnums <- tibble(field  .... [TRUNCATED] 
[1] "File for export to LaTeX found: /home/rstudio/tables/latexnums.Rda"

> update_latexnums <- function(field, value) {
+     latexnums <- readRDS(latexnums.Rda)
+     if (any(latexnums$field == field)) {
+         message( .... [TRUNCATED] 

> .Last <- function() {
+     sessionInfo()
+ }
> 
> ## Non-standard - install of a page with same name
> library(stargazer)
> 
> # Get the data
> # Read in data extracted from openICPSR,
> # This varies from year to year
> 
> icpsr.custom <- read_excel(file.path(icpsrbase,icpsr.custom.xlsx)) %>%
+   separate(Created,c("Created.Date","Created.Time"),sep="T") %>%
+   mutate(date=parse_date(Created.Date)) %>%
+   filter(date >= firstday & date <= lastday )
> 
> icpsr.actual_lastday <- icpsr.custom %>% 
+   summarize(lastday=max(date)) %>%
+   pull(lastday) %>% as.character()
> 
> # QA
> summary(icpsr.custom)
   Project              Files           Bytes           Created.Date      
 Length:496         Min.   :  1.0   Min.   :1.448e+03   Length:496        
 Class :character   1st Qu.: 11.0   1st Qu.:2.108e+06   Class :character  
 Mode  :character   Median : 36.5   Median :3.630e+07   Mode  :character  
                    Mean   :110.7   Mean   :2.262e+09                     
                    3rd Qu.:123.0   3rd Qu.:8.490e+08                     
                    Max.   :873.0   Max.   :6.299e+10                     
 Created.Time          Title            PubStatus              date           
 Length:496         Length:496         Length:496         Min.   :2022-12-01  
 Class :character   Class :character   Class :character   1st Qu.:2023-03-02  
 Mode  :character   Mode  :character   Mode  :character   Median :2023-04-30  
                                                          Mean   :2023-05-18  
                                                          3rd Qu.:2023-08-04  
                                                          Max.   :2023-11-28  
> 
> 
> update_latexnums("pkgcount",nrow(icpsr.custom))
Adding new row for field pkgcount
> update_latexnums("pkglastday",icpsr.actual_lastday)
Adding new row for field pkglastday
> 
>          
> 
> # cleanup
> icpsr <- icpsr.custom %>%
+   select(Project.ID              = Project,
+          openICPSR.title         = Title,
+          fileCount               = Files,
+          Total.File.Size         = "Bytes",
+          Created.Date            ,
+          date
+   ) 
> 
> ## Distribution of replication packages
> icpsr.file_size <- icpsr %>% 
+   distinct(Project.ID,.keep_all = TRUE) %>%
+   mutate(date_created=as.Date(substr(Created.Date, 1,10), "%Y-%m-%d")) %>%
+   filter(date_created >= as.Date(firstday)-30, date_created <= lastday) %>%
+   transform(filesize=Total.File.Size/(1024^3)) %>% # in GB
+   transform(filesizemb=Total.File.Size/(1024^2)) %>% # in MB
+   transform(intfilesize=round(filesize))
> 
> # get some stats
> icpsr.file_size %>% 
+   summarize(n   = n(),
+             files=sum(fileCount),
+             mean=round(mean(filesize),2),
+             median=round(median(filesize),2),
+             q75=round(quantile(filesize,0.75),2),
+             sum=round(sum(filesize),2)) -> icpsr.stats.gb
> 
> icpsr.file_size %>% 
+     summarize(n   = n(),
+               files=sum(fileCount),
+               mean=round(mean(filesizemb),2),
+             median=round(median(filesizemb),2),
+             q75=round(quantile(filesizemb,0.75),2),
+             sum=round(sum(filesizemb),2)) -> icpsr.stats.mb
> 
> saveRDS(icpsr.file_size,file=file.path(temp,"icpsr.file.size.Rds"))
> saveRDS(icpsr.stats.mb,file=file.path(temp,"icpsr.stats.mb.Rds"))
> saveRDS(icpsr.stats.gb,file=file.path(temp,"icpsr.stats.gb.Rds"))
> 
> icpsr.file_size %>% 
+   group_by(intfilesize) %>% 
+   summarise(n=n()) %>% 
+   ungroup() %>% 
+   mutate(percent=100*n/sum(n)) -> icpsr.stats1
> 
> update_latexnums("pkgsizetwog",icpsr.stats1 %>% 
+                              filter(intfilesize > 2) %>% 
+                              summarize(percent=sum(percent)) %>% round(0))
Adding new row for field pkgsizetwog
> update_latexnums("pkgsizetwentyg",icpsr.stats1 %>% 
+                               filter(intfilesize >19) %>% 
+                               summarize(percent=sum(percent)) %>% round(0))
Adding new row for field pkgsizetwentyg
> 
> 
> update_latexnums("pkgsizetotalgb",icpsr.stats.gb$sum)
Adding new row for field pkgsizetotalgb
> update_latexnums("pkgsizetotaltb",round(icpsr.stats.gb$sum/1024,0))
Adding new row for field pkgsizetotaltb
> update_latexnums("pkgsizemean",icpsr.stats.mb$mean)
Adding new row for field pkgsizemean
> update_latexnums("pkgsizemedian",icpsr.stats.mb$median)
Adding new row for field pkgsizemedian
> update_latexnums("pkgsizeqsvntyfv",icpsr.stats.mb$q75)
Adding new row for field pkgsizeqsvntyfv
> update_latexnums("pkgfilesT",round(icpsr.stats.mb$files/1000,0))
Adding new row for field pkgfilesT
> update_latexnums("pkgfiles",icpsr.stats.mb$files)
Adding new row for field pkgfiles
> 
> proc.time()
   user  system elapsed 
  1.170   1.516   1.148 
