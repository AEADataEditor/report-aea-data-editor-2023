
R version 4.2.3 (2023-03-15) -- "Shortstop Beagle"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Tabulate statistics and make graphs for the AEA data editor report
> # Harry Son
> # 2/18/2021
> 
> # Inputs
> #   - file.path(jiraanon,"jira.anon.RDS") 
> #   - file.path(temp,"jira.others.RDS)
> # Outputs
> 
> 
> ### Load libraries 
> ### Requirements: have library *here*
> source(here::here("global-libraries.R"),echo=TRUE)

> ppm.date <- "2023-11-01"

> options(repos = c(CRAN = paste0("https://packagemanager.posit.co/cran/__linux__/focal/", 
+     ppm.date)))

> global.libraries <- c("dplyr", "here", "tidyr", "tibble", 
+     "stringr", "readr", "splitstackshape", "digest", "remotes", 
+     "readxl", "write ..." ... [TRUNCATED] 

> pkgTest <- function(x) {
+     if (!require(x, character.only = TRUE)) {
+         install.packages(x, dep = TRUE)
+         if (!require(x, charact .... [TRUNCATED] 

> pkgTest.github <- function(libname, source, pkgname = libname) {
+     if (!require(libname, character.only = TRUE)) {
+         if (pkgname == "")  .... [TRUNCATED] 

> results <- sapply(as.list(global.libraries), pkgTest)
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: here
here() starts at /home/rstudio
Loading required package: tidyr
Loading required package: tibble
Loading required package: stringr
Loading required package: readr
Loading required package: splitstackshape
Loading required package: digest
Loading required package: remotes
Loading required package: readxl
Loading required package: writexl
Loading required package: ggplot2
Loading required package: ggthemes
Loading required package: janitor

Attaching package: ‘janitor’

The following objects are masked from ‘package:stats’:

    chisq.test, fisher.test

Loading required package: dataverse
Loading required package: xtable

> pkgTest.github("stargazer", "markwestcott34", "stargazer-booktabs")
Loading required package: stargazer

Please cite as: 

 Hlavac, Marek (2015). stargazer: Well-Formatted Regression and Summary Statistics Tables.
 R package version 5.2. http://CRAN.R-project.org/package=stargazer 

[1] "OK"
> source(here::here("programs","config.R"),echo=TRUE)

> process_anon <- TRUE

> download_anon <- TRUE

> report.year <- 2023

> firstday <- paste0(as.character(report.year - 1), 
+     "-12-01")

> lastday <- paste0(as.character(report.year), "-11-30")

> basepath <- here::here()

> setwd(basepath)

> jira.anon.partial <- file.path("data", "jira", "anon")

> jiraanon <- file.path(basepath, jira.anon.partial)

> manual <- file.path(basepath, "data", "manual")

> jira.raw <- file.path("data", "jira", "raw")

> icpsrbase <- file.path(basepath, "data", "icpsr")

> icpsr.utilization.date <- "2023-12-06"

> icpsr.utilization.file <- paste0("utilizationReport-", 
+     icpsr.utilization.date, ".csv")

> icpsr.custom.xlsx <- "AEA-2023-Jan-1-through-Nov-28-2023.xlsx"

> zenodobase <- file.path(basepath, "data", "zenodo")

> jira.anon.name <- file.path(jiraanon, "jira.anon.RDS")

> jira.anon.commit <- "c02c1a68b2bdc24704d1e51b5273df209ad31378"

> jira.anon.sha256 <- "6f76b58e101f88469698cfec98a834f160f25db6549d433f45520be21360d3d5"

> jira.anon.urlbase <- paste0("https://raw.githubusercontent.com/AEADataEditor/processing-jira-process-data/", 
+     jira.anon.commit)

> jira.anon.url <- file.path(jira.anon.urlbase, "data", 
+     "anon", "jira.anon.RDS")

> jira.members.url <- file.path(jira.anon.urlbase, "data", 
+     "replicationlab_members.txt")

> jira.members.name <- file.path(jiraanon, "replicationlab_members.txt")

> jira.noncompliance.name <- file.path(jira.raw, "jira-search-non-compliant.xlsx")

> jira.updates.name <- file.path(jira.raw, "jira-search-updates.xlsx")

> jira.nda.name <- file.path(jira.raw, "jira-search-nda.xlsx")

> jira.external.name <- file.path(jira.raw, "jira-search-external.xlsx")

> scholarone <- file.path(basepath, "data", "scholarone")

> scholarone.file <- "dataEditorReport_20221111-20231110.xlsx"

> scholarone.name <- file.path(scholarone, scholarone.file)

> scholarone.prev <- "dataEditorReport_20201128-20211127Revised.xlsx"

> scholarone.skip <- 33

> scholarone.skip2 <- 45

> scholarone.pskip <- 31

> images <- file.path(basepath, "images")

> tables <- file.path(basepath, "tables")

> programs <- file.path(basepath, "programs")

> temp <- file.path(basepath, "data", "temp")

> latexnums.Rda <- file.path(tables, "latexnums.Rda")

> latexnums.tex <- file.path(tables, "latexnums.tex")

> for (dir in list(images, tables, programs, temp)) {
+     if (file.exists(dir)) {
+     }
+     else {
+         dir.create(file.path(dir))
+     }
 .... [TRUNCATED] 

> set.seed(20201201)

> pkgTest("tibble")
[1] "OK"

> if (file.exists(latexnums.Rda)) {
+     print(paste0("File for export to LaTeX found: ", latexnums.Rda))
+ } else {
+     latexnums <- tibble(field  .... [TRUNCATED] 
[1] "File for export to LaTeX found: /home/rstudio/tables/latexnums.Rda"

> update_latexnums <- function(field, value) {
+     latexnums <- readRDS(latexnums.Rda)
+     if (any(latexnums$field == field)) {
+         message( .... [TRUNCATED] 

> .Last <- function() {
+     sessionInfo()
+ }
> 
> message(paste0("Reading from ",icpsr.utilization.file))
Reading from utilizationReport-2023-12-06.csv
> utilizationReport <- read_csv(file.path(icpsrbase,icpsr.utilization.file)) %>%
+   select(Project.ID = "Study ID",
+          Status,
+          Views,
+          Downloads  = "Download",
+          Updated.Date = "Updated Date") %>%
+   # blacklist - these are in an ambiguous state
+   mutate(exclude = (Project.ID %in% c(109644,110581,110621,110902,111003))) %>%
+   filter(exclude == FALSE) %>%
+   filter(Status %in% c("PUBLISHED","NEW VERSION IN PROGRESS","SUBMITTED") ) %>%
+   mutate(is_published = (Views >0),
+          as.of.date   = icpsr.utilization.date)
Rows: 5303 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (3): Project Name, Status, Depositor Email
dbl  (3): Study ID, Views, Download
dttm (1): Updated Date

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> 
> summary(utilizationReport)
   Project.ID        Status              Views           Downloads      
 Min.   :109703   Length:4937        Min.   :    0.0   Min.   :   0.00  
 1st Qu.:113478   Class :character   1st Qu.:  402.0   1st Qu.:  21.00  
 Median :114731   Mode  :character   Median :  559.0   Median :  46.00  
 Mean   :127850                      Mean   :  725.3   Mean   :  83.61  
 3rd Qu.:130366                      3rd Qu.:  838.0   3rd Qu.:  95.00  
 Max.   :195621                      Max.   :28549.0   Max.   :2572.00  
  Updated.Date                     exclude        is_published   
 Min.   :2019-08-20 15:21:01.25   Mode :logical   Mode :logical  
 1st Qu.:2019-10-12 12:04:52.74   FALSE:4937      FALSE:310      
 Median :2019-10-13 07:15:59.88                   TRUE :4627     
 Mean   :2020-09-30 11:10:08.21                                  
 3rd Qu.:2021-10-21 15:04:10.48                                  
 Max.   :2023-12-06 16:15:38.70                                  
  as.of.date       
 Length:4937       
 Class :character  
 Mode  :character  
                   
                   
                   
> 
> # we save this filtered file
> saveRDS(utilizationReport,file=file.path(icpsrbase,"anonUtilizationReport.Rds"))
> write_csv(utilizationReport,file=file.path(icpsrbase,"anonUtilizationReport.csv"))
> 
> 
> proc.time()
   user  system elapsed 
  1.289   1.617   1.395 
